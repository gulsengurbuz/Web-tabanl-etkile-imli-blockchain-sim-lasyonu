:root {
  --bg-1: #0a2a6b;
  --bg-2: #0f4aa2;
  --bg-3: #3aa0ff;
  --ink: #e8f0ff;
  --muted: #b5c8e6;
  --card: rgba(255, 255, 255, 0.06);
  --border: rgba(255, 255, 255, 0.15);
  --glow: rgba(58, 160, 255, 0.65);
  --radius: 18px;
  --shadow: 0 20px 60px rgba(0, 0, 0, 0.35);
}

* {
  box-sizing: border-box;
}
html,
body {
  height: 100%;
}
body {
  margin: 0;
  font-family: Inter, system-ui, -apple-system, Segoe UI, Roboto, Helvetica,
    Arial, sans-serif;
  color: var(--ink);
  background: linear-gradient(160deg, var(--bg-1), var(--bg-2));
}

.hero {
  position: relative;
  min-height: 70vh;
  width: 100%;
  overflow: hidden;
  border-bottom: 1px solid var(--border);
}

.hero .gradient {
  position: absolute;
  inset: -10%;
  background: radial-gradient(
      1200px 600px at 15% 20%,
      rgba(58, 160, 255, 0.35),
      transparent 55%
    ),
    radial-gradient(
      900px 500px at 85% 70%,
      rgba(90, 180, 255, 0.22),
      transparent 60%
    ),
    linear-gradient(160deg, transparent 0 60%, rgba(255, 255, 255, 0.05) 100%);
  filter: saturate(1.15);
  pointer-events: none;
  animation: drift 22s ease-in-out infinite alternate;
}

@keyframes drift {
  from {
    transform: translate3d(0, 0, 0) scale(1);
  }
  to {
    transform: translate3d(0, -2%, 0) scale(1.03);
  }
}

#network {
  position: absolute;
  inset: 0;
  width: 100%;
  height: 100%;
  display: block;
  opacity: 0.7;
}

.cubes {
  position: absolute;
  inset: 0;
  pointer-events: none;
}
.cube {
  position: absolute;
  width: 140px;
  height: 140px;
  border-radius: 12px;
  background: linear-gradient(
    145deg,
    rgba(255, 255, 255, 0.22),
    rgba(255, 255, 255, 0.06)
  );
  box-shadow: inset 0 0 0 2px rgba(255, 255, 255, 0.16),
    0 10px 30px rgba(10, 20, 40, 0.25);
  backdrop-filter: blur(6px);
  -webkit-backdrop-filter: blur(6px);
  transform: rotateX(10deg) rotateY(25deg) rotateZ(0deg);
  animation: float 9s ease-in-out infinite;
}
.cube::after {
  content: "";
  position: absolute;
  inset: 0;
  border-radius: 12px;
  box-shadow: inset 0 0 40px var(--glow);
  opacity: 0.5;
}

.cube-a {
  top: 14%;
  left: 6%;
  animation-delay: 0s;
}
.cube-b {
  bottom: 18%;
  right: 8%;
  width: 110px;
  height: 110px;
  animation-delay: 1.1s;
}
.cube-c {
  top: 26%;
  right: 25%;
  width: 90px;
  height: 90px;
  animation-delay: 0.4s;
}

@keyframes float {
  0%,
  100% {
    transform: translateY(0) rotateX(10deg) rotateY(25deg);
  }
  50% {
    transform: translateY(-16px) rotateX(12deg) rotateY(23deg);
  }
}

.content {
  position: relative;
  max-width: 1100px;
  margin: 0 auto;
  padding: 120px 24px 100px;
  display: flex;
  flex-direction: column;
  gap: 18px;
  z-index: 1;
}

.brand {
  display: flex;
  align-items: center;
  gap: 18px;
}

.logo {
  width: 52px;
  height: 52px;
  filter: drop-shadow(0 6px 14px rgba(0, 0, 0, 0.35));
}

h1 {
  font-size: clamp(36px, 6vw, 64px);
  margin: 0;
  line-height: 1.05;
  letter-spacing: 0.2px;
  text-shadow: 0 6px 24px rgba(0, 0, 0, 0.35);
}

.subtitle {
  margin: 6px 0 20px;
  color: var(--muted);
  font-size: clamp(14px, 2.2vw, 18px);
}

.cta {
  display: flex;
  gap: 12px;
}
.btn {
  padding: 12px 18px;
  border-radius: var(--radius);
  text-decoration: none;
  color: var(--ink);
  border: 1px solid var(--border);
  background: var(--card);
  backdrop-filter: blur(6px);
  -webkit-backdrop-filter: blur(6px);
  box-shadow: var(--shadow);
  transition: transform 0.25s ease, box-shadow 0.25s ease, background 0.25s ease;
}
.btn:hover {
  transform: translateY(-2px);
  box-shadow: 0 24px 60px rgba(0, 0, 0, 0.4);
}
.btn.primary {
  background: linear-gradient(
    180deg,
    rgba(58, 160, 255, 0.35),
    rgba(58, 160, 255, 0.15)
  );
  border-color: rgba(58, 160, 255, 0.5);
}
.btn.ghost {
  background: rgba(255, 255, 255, 0.04);
}

.below {
  max-width: 1100px;
  margin: 0 auto;
  padding: 32px 24px 80px;
}
.below h2 {
  margin: 22px 0 8px;
  font-weight: 800;
}
.below p {
  color: var(--muted);
}

@media (max-width: 640px) {
  .cube {
    display: none;
  }
  .content {
    padding: 96px 16px 84px;
  }
  .cta {
    flex-wrap: wrap;
  }
}
